@page "/"
@using Paarungsruf.Dtos
@using Paarungsruf.Shared.Pairings
@inject HttpClient Client
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<ul>
    @foreach (var matrix in _matrixes)
    {
        <li>
            @matrix.Id <button class="btn btn-primary" @onclick="() => GoToMatrix(matrix.IdRaw)">Create Matrix</button>
        </li>
    }
</ul>

<button class="btn btn-primary" @onclick="() => CreateMatrix()">Create Matrix</button>



@code
{
    List<Matrix> _matrixes = new();

    // private List<Tournament> _tournaments = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // _tournaments = await Client.GetFromJsonAsync<List<Tournament>>("Tournament");   
        _matrixes = await Client.GetFromJsonAsync<List<Matrix>>("Matrixes");   
    }

    private void GoToMatrix(string matrixId)
    {
        NavigationManager.NavigateTo($"Matrix/{matrixId}");
    }

    private async Task CreateMatrix()
    {
        var result = await Client.PostAsJsonAsync("Matrixes", new CreateMatrixDto(new List<Faction>
        {
            Faction.Cultists,
            Faction.BeastHeards,
            Faction.DaemonLegions,
            Faction.DreadElves,
            Faction.HighbornElves
        }, new List<Faction>
        {
            Faction.DwarvenHolds,
            Faction.BeastHeards,
            Faction.InfernalDwarfs,
            Faction.OgreKhans,
            Faction.VerminSwarm
        }));
        var matrix = await result.Content.ReadFromJsonAsync<Matrix>();
        NavigationManager.NavigateTo($"Matrixes/{matrix.Id}");
    }
}
