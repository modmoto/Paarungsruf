@page "/"
@using Paarungsruf.Shared
@using Paarungsruf.Shared.Pairings
@using Paarungsruf.Shared.Tournaments
@inject HttpClient Client
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<table>
    @foreach (var rows in _matrix.Matches)
    {
        <tr>
            @foreach (var matchValue in rows.Opponents)
            {
                if (matchValue.Value == 10)
                {
                    <td class="bg-info">@matchValue.Value</td>
                }
                else if (matchValue.Value < 10)
                {
                    <td class="bg-danger">@matchValue.Value</td>
                }
                else
                {
                    <td class="bg-success">@matchValue.Value</td>
                }
            }
        </tr>
    }
</table>

<ul>
    @foreach (var tournament in _tournaments)
    {
        <li>
            @tournament.Name <button class="btn btn-primary" @onclick="() => GoToCreateMatrix(tournament.Id)">Create Matrix</button>
        </li>
    }
</ul>

@code
{
    Matrix _matrix = new(
        new List<Faction> { Faction.BeastHeards, Faction.DaemonLegions, Faction.HighbornElves },
        new List<Faction> { Faction.SaurianAncients, Faction.VerminSwarm, Faction.KingdomOfEquitaine });

    private List<Tournament> _tournaments = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _matrix.SetRating(Faction.BeastHeards, Faction.SaurianAncients,10);
        _matrix.SetRating(Faction.BeastHeards, Faction.VerminSwarm,11);
        _matrix.SetRating(Faction.BeastHeards, Faction.KingdomOfEquitaine,7);
        _matrix.SetRating(Faction.DaemonLegions, Faction.SaurianAncients,9);
        _matrix.SetRating(Faction.DaemonLegions, Faction.VerminSwarm,5);
        _matrix.SetRating(Faction.DaemonLegions, Faction.KingdomOfEquitaine,6);
        _matrix.SetRating(Faction.HighbornElves, Faction.SaurianAncients,14);
        _matrix.SetRating(Faction.HighbornElves, Faction.VerminSwarm, 16);
        _matrix.SetRating(Faction.HighbornElves, Faction.KingdomOfEquitaine, 5);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _tournaments = await Client.GetFromJsonAsync<List<Tournament>>("Tournament");   
    }

    private async Task GoToCreateMatrix(string tournamentId)
    {
        var result = await Client.PostAsJsonAsync("Matrix", new { tournamentId });
        var matrix = await result.Content.ReadFromJsonAsync<CreateMatrixDto>();
        NavigationManager.NavigateTo($"Matrix/{matrix.TournamentId}");
    }
    
    public class CreateMatrixDto
    {
        public string TournamentId { get; set; }
    }
}
